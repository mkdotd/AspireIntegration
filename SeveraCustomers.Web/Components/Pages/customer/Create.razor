@page "/customer/create"
@inject NavigationManager NavigationManager
@using Models
@inject ApiClient CustomerApi

<PageTitle>Create</PageTitle>

<h1>Create Customer <a class="btn btn-info float-end" href="/customer/index">Back to List</a></h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Customer" OnValidSubmit="AddCustomer" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="Name" class="form-label">Name:</label>
                <InputText id="Name" @bind-Value="Customer.Name" class="form-control" />
                <ValidationMessage For="() => Customer.Name" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="Number" class="form-label">Number:</label>
                <InputNumber id="Number" @bind-Value="Customer.Number" class="form-control" />
                <ValidationMessage For="() => Customer.Number" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="OwnerName" class="form-label">OwnerName:</label>
                <InputText id="OwnerName" @bind-Value="Customer.OwnerName" class="form-control" />
                <ValidationMessage For="() => Customer.OwnerName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="Website" class="form-label">Website:</label>
                <InputText id="Website" @bind-Value="Customer.Website" class="form-control" />
                <ValidationMessage For="() => Customer.Website" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="IndustryName" class="form-label">IndustryName:</label>
                <InputText id="IndustryName" @bind-Value="Customer.IndustryName" class="form-control" />
                <ValidationMessage For="() => Customer.IndustryName" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-success">Create</button>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private Customers Customer { get; set; } = new();

    private async Task AddCustomer()
    {
        try
        {
            await CustomerApi.CreateCustomer(Customer);
        }
        catch (Exception ex)
        {
            NavigationManager.NavigateTo("/customer/index");
        }
        NavigationManager.NavigateTo("/customer/index");
    }
}
