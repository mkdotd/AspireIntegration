@page "/customer/create"
@inject NavigationManager NavigationManager
@using Models

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Customer</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Customer" OnValidSubmit="AddCustomer" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="title" class="form-label">Name:</label> 
                <InputText id="title" @bind-Value="Customer.Name" class="form-control" />
                <ValidationMessage For="() => Customer.Name" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="releasedate" class="form-label">Number:</label>
                <InputDate id="releasedate" @bind-Value="Customer.Number" class="form-control" />
                <ValidationMessage For="() => Customer.Number" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="genre" class="form-label">OwnerName:</label>
                <InputText id="genre" @bind-Value="Customer.OwnerName" class="form-control" />
                <ValidationMessage For="() => Customer.OwnerName" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="price" class="form-label">Website:</label>
                <InputNumber id="price" @bind-Value="Customer.Website" class="form-control" />
                <ValidationMessage For="() => Customer.Website" class="text-danger" /> 
            </div>  
            <div class="mb-3">
                <label for="price" class="form-label">IndustryName:</label>
                <InputNumber id="price" @bind-Value="Customer.IndustryName" class="form-control" />
                <ValidationMessage For="() => Customer.IndustryName" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/customer/index">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Customers Customer { get; set; } = new();

    private async Task AddCustomer()
    {
        // using var context = DbFactory.CreateDbContext();
        // context.Movie.Add(Movie);
        // await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/customer/index");
    }
}
